# CORRECTED nginx configuration for mlapi.us
# The issue was with the regex pattern - it needs to match the full URL path

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name mlapi.us;
    client_max_body_size 2048M;

    ssl_certificate /etc/letsencrypt/live/mlapi.us/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mlapi.us/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss: ws:; media-src 'self'; object-src 'none'; frame-ancestors 'self';" always;

    # Handle static assets first (more specific match)
    location /cardcam/static/ {
        proxy_pass http://192.168.1.77:3001/static/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Cache static assets
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Handle ONNX WebAssembly modules with MIME type fix
    location /cardcam/onnx/ {
        proxy_pass http://192.168.1.77:3001/onnx/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # MIME type fixes
        location ~ \.mjs$ {
            proxy_pass http://192.168.1.77:3001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            add_header Content-Type "text/javascript" always;
            add_header Access-Control-Allow-Origin "*" always;
        }

        location ~ \.wasm$ {
            proxy_pass http://192.168.1.77:3001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            add_header Content-Type "application/wasm" always;
            add_header Access-Control-Allow-Origin "*" always;
        }

        # Cache ONNX modules
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Handle ONNX model files
    location /cardcam/models/ {
        proxy_pass http://192.168.1.77:3001/models/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Cache model files
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Handle the React app (less specific match)
    location /cardcam/ {
        proxy_pass http://192.168.1.77:3001/cardcam/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_Set_header X-Forwarded-Proto $scheme;

        # Settings for large file uploads
        proxy_read_timeout 300;
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
    }
}

# ALTERNATIVE SIMPLER APPROACH - Replace the above with this if nested locations don't work:

# Just modify your existing /cardcam/onnx/ location to:
# location /cardcam/onnx/ {
#     proxy_pass http://192.168.1.77:3001/onnx/;
#     proxy_set_header Host $host;
#     proxy_set_header X-Real-IP $remote_addr;
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_set_header X-Forwarded-Proto $scheme;
# 
#     # Override MIME types for specific file extensions
#     if ($request_uri ~* \.mjs$) {
#         add_header Content-Type "text/javascript" always;
#     }
#     if ($request_uri ~* \.wasm$) {
#         add_header Content-Type "application/wasm" always;
#     }
# 
#     # Cache ONNX modules
#     expires 1y;
#     add_header Cache-Control "public, immutable";
# }
